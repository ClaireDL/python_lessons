01 - First libraries and functions
  Print output
  Importing packages
  Getting the time
  Creating random numbers
  The os and sys packages
  Read command line arguments from sys
  Exercises
    Salute the person
    Print a text before the name
    Print a variable
    Print the current time
  Research
    What is a timestamp?
    How do you install a nekw package (numpy)?

02 - Basic data types
  Strings
  Int
  Double
  Boolean
  Operators (including assignments and xor)
  Ifs
  Conversion between types
  Exercises
    Read two strings, convert them as numbers, do calculation
    Round a double precision number read from command line
    Simple calculations on input parameters (2 + 3)
    Salute a person differently given an input parameter
    Salute a person differently based on time
    Given a timestamp, convert it into python time
  Research
    What is the biggest Int I can store and how do I find it?
    How do I check a variable contains a number?

03 - Functions
  Zero or multiple arguments
  Named parameters
  Default values
  Nested functions
  DRY with functions
  Recursion and tail recursion
  Exercises
    Wrap the print function with a default behaviour
    Tune the above providing a default parameter
    Tune the above using named parameter
    Fibonacci (also with tail recursion and nested functions)
    Factorial (also with tail recursion and nested functions)
    Split the code in different subunits
    Create different mathematical functions
    Call a different function based on a number
    Simple RPN calculator for 2 numbers and 1 operator
  Research
    What are lambda functions in python

04 - Strings
  String interpolation and concatenation
  String upper case, lower case, strip
  Replace substring
  Find string
  Exercises
    Read two strings, convert them as numbers, do calculation
    Round a double precision number read from command line
    Given a first and last name, concatenate it to create a file name
    Case-insensitive comparison between strings
    Search numbers inside a text
  Research
    How to find a text using regular expressions
    How to find all numbers in a given text with RE

05 - Lists
  Create a list
  Append and extend lists
  Select a specific element
  Select a range of elements
  Strings are lists
  Split and join strings
  Loops for and while (and indexes)
  Iterate through each item
  Iterate using an index
  List operations
    Min, Max, Sum
    Map, Filter, Sort, Distinct
  List comprehensions
  DRY with lists
  Clone a list
  List of lists
  Exercises
    Given a list of strings, calculate the average word length
    Create a stack and a queue using lists
    List files recursively
    Splitting a string into its fields
    Reverse a list
    Reverse a list recursively
    Find the maximum (no builtins)
    Find the average (no builtins)
    Find the standard deviation
    Double all its element using list comprehension and then map
    Display only items at odd positions
    Create a list from a string concatenation
    Print substring of a longer string
    Given a list, create two new lists with even number in one and odd in the other
    Reverse polish notation calculator
    Remove duplicates (no builtins)
    Flatten a list of lists
    Insertion sort algorithm
    Build a set of lists of growing size
    Given a list extract only the items that contains a specific text
    Create the equivalent of map using recursion
  Research
    Study and implement Bubble Sort

06 - Dictionaries
  Simple dictionary
  Complex example with nested structures
  Adding, removing and updating entries
  Dictionaries as string replacements
  Pretty printing
  Using variables as keys
  Scoreboarding (count the words in a text)
  Create a dictionary from two lists dict(zip(..., ...))
  How a dictionary works
  Dictionary comprehension
  Exercises
    Given a list calculate average and stddev and store the result in a dict
    Count the repetitions of letters in a given text
    Dictionaries as string interpolation
    Build a dictionary-like structure using lists
    Sort a list of dictionaries
  Research
    Is it faster to access a random element in a list or in a dictionary?
    What is JSON? How do you load and save JSON in python?

07 - More on Python libraries
  Creating list of random numbers
  Listing files in a directory
  How to read arguments from the command line
  Import functions from a module
  Exercises
    Create a list of random numbers
    Get only files that has a specific word in the name
    Calculate the execution time of some code
    Print the time only in 5 minutes chunk or in "5 past, half past, ..."
    Given a random list, write even number in one file and odd ones in another
    Create one file every minute with random content
    Ask the user what is the output file they need and how often to create a new

08 - Files
  Open, read, write
  Build file names
  Scan a file
  Load a file into a list
  Exercises
    Write a list in a file
    Simple template engine
    Read a list from a file and find the maximum
    Load a CSV file and put each field into a dictionary
    Same as above, but use a JSON file to store the field names
  Research
    Build your own bank account interpreter

09 - File System
  List files and directories
  Remove file and directories
  Move files and directories
  Check a file exists
  Exercises
    Given a list of names build a file for each item
    As above, but if the file exists move it to a directory
    At startup rotate existing files a create a new one

10 - Randomness
  Numbers in a range
  Create a distribution
  Exercise
    Create a program that generates random number in the range and with the distribution given
  Research
    What are pseudo random numbers? How do overcome the issue?
    How to calculate statistics with numpy

Final - File templating
Final - Data Analysis

11 - Exceptions
  What they are
  How they break the flow
  Hierarchy
  How to raise them
  How to catch them
  How to extract information
  Techniques to use them

12 - Unit test
  What it is, python libraries
  What to test
  Simple Example
  Test suites
  Stubbing
  Mocking
  Exercises
    Write a test for one of the sorting algorithm
    Apply the same test suit to a different sorting algorithm
    Write unit testing for the Vector library

13 - Objects
